<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda.optimize</groupId>
    <artifactId>optimize-parent</artifactId>
    <version>8.7.0-SNAPSHOT</version>
  </parent>

  <artifactId>optimize-backend</artifactId>
  <name>Optimize Backend</name>

  <properties>
    <jersey.version>3.1.3</jersey.version>
    <spring.security.version>6.3.4</spring.security.version>
    <nimbus.jose.jwt.version>9.41.2</nimbus.jose.jwt.version>
    <it.test.excludedGroups />
    <it.test.includedGroups />
    <test.forkCount />
  </properties>

  <dependencies>
    <!-- Logging dependencies -->

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>8.0</version>
    </dependency>

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>3.1.12</version>
    </dependency>

    <!-- Optimize dependencies -->
    <dependency>
      <groupId>io.camunda.optimize</groupId>
      <artifactId>optimize-commons</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Camunda dependencies -->
    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-bpmn-model</artifactId>
      <version>${camunda.maven.artifacts.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-dmn-model</artifactId>
      <version>${camunda.maven.artifacts.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${camunda.maven.artifacts.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.camunda.feel</groupId>
          <artifactId>feel-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>camunda-search-client-connect</artifactId>
      <version>8.6.3</version>
    </dependency>

    <!-- Zeebe dependencies -->
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-protocol</artifactId>
      <version>${zeebe.version}</version>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-client-java</artifactId>
      <version>${zeebe.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Jetty-->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.http2</groupId>
      <artifactId>jetty-http2-server</artifactId>
    </dependency>

    <!-- as per documentation, we keep these for http/2. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-java-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-java-server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.ee10</groupId>
      <artifactId>jetty-ee10-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-rewrite</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
    </dependency>

    <!-- IDENTITY-->
    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>identity-spring-boot-starter</artifactId>
      <version>${identity.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j2-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring.boot.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
      <version>${spring.boot.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-client</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-jose</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-resource-server</artifactId>
      <version>${spring.security.version}</version>
    </dependency>

    <!-- Authentication -->
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>4.4.0</version>
      <exclusions>
        <exclusion>
          <artifactId>jackson-databind</artifactId>
          <groupId>com.fasterxml.jackson.core</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Quartz framework -->
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${quartz.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.33</version>
    </dependency>

    <!-- CSV -->
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.9</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Utilities -->
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>3.1.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>3.6.1</version>
    </dependency>
    <dependency>
      <groupId>com.github.sisyphsu</groupId>
      <artifactId>dateparser</artifactId>
      <version>1.0.11</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Micrometer Prometheus registry  -->
    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <version>1.13.6</version>
    </dependency>

    <!--Lucene dependencies-->
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>${lucene.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--Test dependencies-->
    <dependency>
      <groupId>com.tdunning</groupId>
      <artifactId>t-digest</artifactId>
      <version>3.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-test-container</artifactId>
      <version>3.6.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail</artifactId>
      <version>2.0.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.wnameless.json</groupId>
      <artifactId>json-flattener</artifactId>
      <version>0.16.6</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Opensearch  -->
    <dependency>
      <groupId>org.apache.httpcomponents.core5</groupId>
      <artifactId>httpcore5</artifactId>
      <version>${apache.http5-core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.opensearch.client</groupId>
      <artifactId>opensearch-java</artifactId>
      <version>${opensearch.client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-license-check</artifactId>
      <version>2.10.0</version>
    </dependency>

    <!-- ClassGraph  -->
    <dependency>
      <groupId>io.github.classgraph</groupId>
      <artifactId>classgraph</artifactId>
      <version>4.8.177</version>
    </dependency>

    <!-- used/undeclared block -->

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>jakarta.mail</artifactId>
      <version>2.0.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.agrona</groupId>
      <artifactId>agrona</artifactId>
      <version>1.23.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-core</artifactId>
      <version>${mockserver.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.17.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>1.19.8</version>
      <scope>test</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>2.17.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>identity-sdk</artifactId>
      <version>8.5.6</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-core</artifactId>
      <version>6.3.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator</artifactId>
      <version>${spring.boot.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>3.1.8</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.17.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-bpmn-model</artifactId>
      <version>8.6.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.json</groupId>
      <artifactId>jakarta.json-api</artifactId>
      <version>2.1.3</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
      <version>${spring.boot.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-http</artifactId>
      <version>${jetty.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>6.3.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>oauth2-oidc-sdk</artifactId>
      <version>9.43.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>json-smart</artifactId>
      <version>2.5.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.17.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.16</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty</artifactId>
      <version>${mockserver.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>1.13.6</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.vdurmont</groupId>
      <artifactId>semver4j</artifactId>
      <version>3.1.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>3.0.2</version>
      <scope>compile</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.opensearch.client</groupId>
      <artifactId>opensearch-rest-client</artifactId>
      <version>2.12.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>co.elastic.clients</groupId>
      <artifactId>elasticsearch-java</artifactId>
      <version>8.13.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
      <version>4.1.115.Final</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-client</artifactId>
      <version>8.13.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>4.0.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.11.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>17.0.0</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>2.1.1</version>
      <scope>compile</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.17.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.14.0</version>
      <scope>compile</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore-nio</artifactId>
      <version>4.4.16</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
      <version>5.3.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.16.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.11.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-client-java</artifactId>
      <version>${mockserver.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.wnameless.json</groupId>
      <artifactId>json-base</artifactId>
      <version>2.4.3</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-xml-model</artifactId>
      <version>${camunda.maven.artifacts.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>3.1.8</version>
      <scope>compile</scope>
    </dependency>

    <!-- this is necessary. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.eclipse.angus</groupId>
      <artifactId>jakarta.mail</artifactId>
      <version>2.0.3</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- scope here is wider than test. Dependency:analyze error suppressed -->
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>2.9.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>3.1.8</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.0.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>optimize-backend-${project.version}</finalName>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <fork>false</fork>
          <meminitial>128m</meminitial>
          <maxmem>256m</maxmem>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-it-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <workingDirectory>${project.build.directory}</workingDirectory>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies-to-lib-folder</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <ignoredUnusedDeclaredDependencies>
            <dep>net.logstash.logback:logstash-logback-encoder</dep>
            <dep>org.codehaus.janino:janino</dep>
            <dep>org.eclipse.jetty:jetty-alpn-java-client</dep>
            <dep>org.eclipse.jetty:jetty-alpn-java-server</dep>
            <dep>io.camunda:identity-spring-boot-starter</dep>
            <dep>org.springframework:spring-tx</dep>
            <dep>org.springframework.boot:spring-boot-starter-web</dep>
            <dep>org.springframework.boot:spring-boot-starter-jetty</dep>
            <dep>org.springframework.boot:spring-boot-starter-jersey</dep>
            <dep>io.micrometer:micrometer-registry-prometheus</dep>
            <dep>org.apache.httpcomponents.core5:httpcore5</dep>
            <dep>org.eclipse.angus:jakarta.mail</dep>

            <!-- test dependencies -->
            <dep>org.springframework.boot:spring-boot-starter-test</dep>
          </ignoredUnusedDeclaredDependencies>
          <ignoredNonTestScopedDependencies>
            <dep>com.fasterxml.jackson.datatype:jackson-datatype-jdk8</dep>
            <dep>com.fasterxml.jackson.datatype:jackson-datatype-jsr310</dep>
            <dep>org.apache.httpcomponents:httpcore-nio</dep>
            <dep>org.glassfish.jersey.core:jersey-client</dep>
            <dep>org.apache.tika:tika-core</dep>
            <dep>commons-collections:commons-collections</dep>
            <dep>org.opensearch.client:opensearch-rest-client</dep>
          </ignoredNonTestScopedDependencies>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>../client/dist</directory>
        <targetPath>webapp</targetPath>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/ssl</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/it/webapp</directory>
        <targetPath>webapp</targetPath>
      </testResource>
      <testResource>
        <directory>src/it/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/it/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>it</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>${skipTests}</skip>
              <excludedGroups>${it.test.excludedGroups}</excludedGroups>
              <groups>${it.test.includedGroups}</groups>
              <forkCount>${test.forkCount}</forkCount>
              <reuseForks>true</reuseForks>
              <reportsDirectory>target/failsafe-reports/${surefire.forkNumber}</reportsDirectory>
              <systemPropertyVariables>
                <indexPrefix>${surefire.forkNumber}-</indexPrefix>
                <!-- use two dollar signs to prevent maven properties resolution, surefire will resolve
                the property later. If only ${surefire.forkNumber} is used maven will fail to resolve it
                and won't set the system property -->
                <testForkNumber>$${surefire.forkNumber}</testForkNumber>
                <!-- the 400/401 prefix allows up to 99 forks till we exceed the valid port range of 65535 -->
                <!-- and we stay in the user port range of 1024-49151 -->
                <optimizeHttpPort>400${surefire.forkNumber}</optimizeHttpPort>
                <optimizeHttpsPort>401${surefire.forkNumber}</optimizeHttpsPort>
                <management.server.port>600${surefire.forkNumber}</management.server.port>
                <databaseMockServerPort>108${surefire.forkNumber}</databaseMockServerPort>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <environmentVariables>
                    <ES_VERSION>${elasticsearch.test.version}</ES_VERSION>
                    <OS_VERSION>${opensearch.test.version}</OS_VERSION>
                  </environmentVariables>
                  <skip>${skip.docker}</skip>
                  <executable>docker</executable>
                  <workingDirectory>..</workingDirectory>
                  <arguments>
                    <argument>compose</argument>
                    <argument>-f</argument>
                    <argument>${docker.compose.file}</argument>
                    <argument>--profile</argument>
                    <argument>setup-integration-test</argument>
                    <argument>up</argument>
                    <argument>-d</argument>
                    <argument>--force-recreate</argument>
                    <argument>--renew-anon-volumes</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>docker-remove</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <skip>${skip.docker}</skip>
                  <executable>docker</executable>
                  <workingDirectory>..</workingDirectory>
                  <arguments>
                    <argument>compose</argument>
                    <argument>-f</argument>
                    <argument>${docker.compose.file}</argument>
                    <argument>rm</argument>
                    <argument>-sfv</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <skip>${skipTests}</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ccsm-it</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludedGroups>${it.test.excludedGroups}</excludedGroups>
              <groups>${it.test.includedGroups}</groups>
              <reportsDirectory>target/failsafe-reports</reportsDirectory>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
