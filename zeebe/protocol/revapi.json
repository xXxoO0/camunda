[
  {
    "extension": "revapi.filter",
    "id": "filter",
    "configuration": {
      "elements": {
        "exclude": [
          {
            "justification": "The management protocol is not public and is allowed to break",
            "matcher": "java-package",
            "match": "io.camunda.zeebe.protocol.management"
          }
        ]
      },
      "archives": {
        "justification": "Ignore everything not included in the module itself",
        "include": [
          "io\\.camunda:zeebe-protocol:.*"
        ]
      }
    }
  },
  {
    "extension": "revapi.differences",
    "id": "differences",
    "configuration": {
      "differences": [
        {
          "justification": "Ignore Enum order for BpmnElementType as ordinal() is not used and the elements are grouped in the enum.",
          "code": "java.field.enumConstantOrderChanged",
          "classQualifiedName": "io.camunda.zeebe.protocol.record.value.BpmnElementType"
        },
        {
          "justification": "Ignore changes to the constant version when we bump it",
          "code": "java.field.constantValueChanged",
          "new": {
            "matcher": "java",
            "match": "type * { * io.camunda.zeebe.protocol.**::^SCHEMA_VERSION; }"
          }
        },
        {
          "justification": "Ignore changes to the constant version when we bump it",
          "code": "java.field.constantValueChanged",
          "new": {
            "matcher": "java",
            "match": "type * { * io.camunda.zeebe.protocol.**::^PROTOCOL_VERSION; }"
          }
        },
        {
          "justification": "Ignore new methods for Protocol Record interfaces, as these are not meant to be implemented but simply consumed; as such, new methods are perfectly fine to add",
          "code": "java.method.addedToInterface",
          "new": {
            "matcher": "java",
            "match": "interface * { * io.camunda.zeebe.protocol.record.**::^*(**); }"
          }
        },
        {
          "justification": "Ignore Enum order for ValueType as ordinal() is not used",
          "code": "java.field.enumConstantOrderChanged",
          "classQualifiedName": "io.camunda.zeebe.protocol.record.ValueType"
        },
        {
          "justification": "Ignore Enum order for RejectionType as ordinal() is not used",
          "code": "java.field.enumConstantOrderChanged",
          "match": "io.camunda.zeebe.protocol.record.RejectionType"
        },
        {
          "justification": "Ignore changes to the project version, as it changes on every release",
          "code": "java.field.constantValueChanged",
          "fieldName": "SEMANTIC_VERSION"
        },
        {
          "justification": "Property with `ExecutionListenerEventType` type was not exported before and was only used internally. To simplify the codebase and reduce redundancy, we have consolidated the event types into a single enum, `JobListenerEventType`, which will be used for both Execution Listeners and User Task Listeners. This change does not impact any public interfaces",
          "code": "java.class.removed",
          "old": "enum io.camunda.zeebe.protocol.record.value.ExecutionListenerEventType",
          "elementKind": "enum"
        }
      ]
    }
  }
]
